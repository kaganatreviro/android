// Generated by view binder compiler. Do not edit!
package com.example.presentation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.example.core_ui.extensions.ExpandableTextView;
import com.example.presentation.R;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentEstablishmentDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatImageButton btnBack;

  @NonNull
  public final ShapeableImageView ivEstImage;

  @NonNull
  public final NestedScrollView scrollView;

  @NonNull
  public final TabLayout tabLayout;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvAddress;

  @NonNull
  public final ExpandableTextView tvDesc;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvPhoneNumber;

  @NonNull
  public final TextView tvTitleContacts;

  @NonNull
  public final TextView tvTitleHappyHoursTime;

  @NonNull
  public final TextView tvUserEmail;

  @NonNull
  public final ViewPager2 viewPager;

  private FragmentEstablishmentDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatImageButton btnBack, @NonNull ShapeableImageView ivEstImage,
      @NonNull NestedScrollView scrollView, @NonNull TabLayout tabLayout, @NonNull Toolbar toolbar,
      @NonNull TextView tvAddress, @NonNull ExpandableTextView tvDesc, @NonNull TextView tvName,
      @NonNull TextView tvPhoneNumber, @NonNull TextView tvTitleContacts,
      @NonNull TextView tvTitleHappyHoursTime, @NonNull TextView tvUserEmail,
      @NonNull ViewPager2 viewPager) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.ivEstImage = ivEstImage;
    this.scrollView = scrollView;
    this.tabLayout = tabLayout;
    this.toolbar = toolbar;
    this.tvAddress = tvAddress;
    this.tvDesc = tvDesc;
    this.tvName = tvName;
    this.tvPhoneNumber = tvPhoneNumber;
    this.tvTitleContacts = tvTitleContacts;
    this.tvTitleHappyHoursTime = tvTitleHappyHoursTime;
    this.tvUserEmail = tvUserEmail;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentEstablishmentDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentEstablishmentDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_establishment_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentEstablishmentDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_back;
      AppCompatImageButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.iv_est_image;
      ShapeableImageView ivEstImage = ViewBindings.findChildViewById(rootView, id);
      if (ivEstImage == null) {
        break missingId;
      }

      id = R.id.scrollView;
      NestedScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.tab_layout;
      TabLayout tabLayout = ViewBindings.findChildViewById(rootView, id);
      if (tabLayout == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tv_address;
      TextView tvAddress = ViewBindings.findChildViewById(rootView, id);
      if (tvAddress == null) {
        break missingId;
      }

      id = R.id.tv_desc;
      ExpandableTextView tvDesc = ViewBindings.findChildViewById(rootView, id);
      if (tvDesc == null) {
        break missingId;
      }

      id = R.id.tv_name;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tv_phone_number;
      TextView tvPhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (tvPhoneNumber == null) {
        break missingId;
      }

      id = R.id.tv_title_contacts;
      TextView tvTitleContacts = ViewBindings.findChildViewById(rootView, id);
      if (tvTitleContacts == null) {
        break missingId;
      }

      id = R.id.tv_title_happy_hours_time;
      TextView tvTitleHappyHoursTime = ViewBindings.findChildViewById(rootView, id);
      if (tvTitleHappyHoursTime == null) {
        break missingId;
      }

      id = R.id.tv_user_email;
      TextView tvUserEmail = ViewBindings.findChildViewById(rootView, id);
      if (tvUserEmail == null) {
        break missingId;
      }

      id = R.id.view_pager;
      ViewPager2 viewPager = ViewBindings.findChildViewById(rootView, id);
      if (viewPager == null) {
        break missingId;
      }

      return new FragmentEstablishmentDetailBinding((ConstraintLayout) rootView, btnBack,
          ivEstImage, scrollView, tabLayout, toolbar, tvAddress, tvDesc, tvName, tvPhoneNumber,
          tvTitleContacts, tvTitleHappyHoursTime, tvUserEmail, viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
