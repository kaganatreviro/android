// Generated by view binder compiler. Do not edit!
package com.example.presentation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.presentation.R;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetBeverageDetailsBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final MaterialTextView tvCategory;

  @NonNull
  public final MaterialTextView tvDescription;

  @NonNull
  public final MaterialTextView tvEstablishment;

  @NonNull
  public final MaterialTextView tvPrice;

  @NonNull
  public final MaterialTextView tvStatus;

  @NonNull
  public final MaterialTextView tvTitle;

  private BottomSheetBeverageDetailsBinding(@NonNull NestedScrollView rootView,
      @NonNull MaterialTextView tvCategory, @NonNull MaterialTextView tvDescription,
      @NonNull MaterialTextView tvEstablishment, @NonNull MaterialTextView tvPrice,
      @NonNull MaterialTextView tvStatus, @NonNull MaterialTextView tvTitle) {
    this.rootView = rootView;
    this.tvCategory = tvCategory;
    this.tvDescription = tvDescription;
    this.tvEstablishment = tvEstablishment;
    this.tvPrice = tvPrice;
    this.tvStatus = tvStatus;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetBeverageDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetBeverageDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_beverage_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetBeverageDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tv_category;
      MaterialTextView tvCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvCategory == null) {
        break missingId;
      }

      id = R.id.tv_description;
      MaterialTextView tvDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvDescription == null) {
        break missingId;
      }

      id = R.id.tv_establishment;
      MaterialTextView tvEstablishment = ViewBindings.findChildViewById(rootView, id);
      if (tvEstablishment == null) {
        break missingId;
      }

      id = R.id.tv_price;
      MaterialTextView tvPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvPrice == null) {
        break missingId;
      }

      id = R.id.tv_status;
      MaterialTextView tvStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvStatus == null) {
        break missingId;
      }

      id = R.id.tv_title;
      MaterialTextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new BottomSheetBeverageDetailsBinding((NestedScrollView) rootView, tvCategory,
          tvDescription, tvEstablishment, tvPrice, tvStatus, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
