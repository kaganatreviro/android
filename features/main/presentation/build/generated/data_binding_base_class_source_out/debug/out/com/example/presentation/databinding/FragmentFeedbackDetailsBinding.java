// Generated by view binder compiler. Do not edit!
package com.example.presentation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.core_ui.extensions.ExpandableTextView;
import com.example.presentation.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFeedbackDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout bottomBar;

  @NonNull
  public final AppCompatImageButton btnBack;

  @NonNull
  public final MaterialButton btnSend;

  @NonNull
  public final EditText etInputAnswer;

  @NonNull
  public final LinearLayout llContainer;

  @NonNull
  public final ScrollView nestedScrollView;

  @NonNull
  public final RecyclerView rvFeedbackAnswer;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvAnswers;

  @NonNull
  public final ExpandableTextView tvFeedback;

  @NonNull
  public final TextView tvPostTime;

  @NonNull
  public final TextView tvUserName;

  private FragmentFeedbackDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout bottomBar, @NonNull AppCompatImageButton btnBack,
      @NonNull MaterialButton btnSend, @NonNull EditText etInputAnswer,
      @NonNull LinearLayout llContainer, @NonNull ScrollView nestedScrollView,
      @NonNull RecyclerView rvFeedbackAnswer, @NonNull Toolbar toolbar, @NonNull TextView tvAnswers,
      @NonNull ExpandableTextView tvFeedback, @NonNull TextView tvPostTime,
      @NonNull TextView tvUserName) {
    this.rootView = rootView;
    this.bottomBar = bottomBar;
    this.btnBack = btnBack;
    this.btnSend = btnSend;
    this.etInputAnswer = etInputAnswer;
    this.llContainer = llContainer;
    this.nestedScrollView = nestedScrollView;
    this.rvFeedbackAnswer = rvFeedbackAnswer;
    this.toolbar = toolbar;
    this.tvAnswers = tvAnswers;
    this.tvFeedback = tvFeedback;
    this.tvPostTime = tvPostTime;
    this.tvUserName = tvUserName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFeedbackDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFeedbackDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_feedback_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFeedbackDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_bar;
      LinearLayout bottomBar = ViewBindings.findChildViewById(rootView, id);
      if (bottomBar == null) {
        break missingId;
      }

      id = R.id.btn_back;
      AppCompatImageButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btn_send;
      MaterialButton btnSend = ViewBindings.findChildViewById(rootView, id);
      if (btnSend == null) {
        break missingId;
      }

      id = R.id.et_input_answer;
      EditText etInputAnswer = ViewBindings.findChildViewById(rootView, id);
      if (etInputAnswer == null) {
        break missingId;
      }

      id = R.id.ll_container;
      LinearLayout llContainer = ViewBindings.findChildViewById(rootView, id);
      if (llContainer == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      ScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.rv_feedback_answer;
      RecyclerView rvFeedbackAnswer = ViewBindings.findChildViewById(rootView, id);
      if (rvFeedbackAnswer == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tv_answers;
      TextView tvAnswers = ViewBindings.findChildViewById(rootView, id);
      if (tvAnswers == null) {
        break missingId;
      }

      id = R.id.tv_feedback;
      ExpandableTextView tvFeedback = ViewBindings.findChildViewById(rootView, id);
      if (tvFeedback == null) {
        break missingId;
      }

      id = R.id.tv_post_time;
      TextView tvPostTime = ViewBindings.findChildViewById(rootView, id);
      if (tvPostTime == null) {
        break missingId;
      }

      id = R.id.tv_user_name;
      TextView tvUserName = ViewBindings.findChildViewById(rootView, id);
      if (tvUserName == null) {
        break missingId;
      }

      return new FragmentFeedbackDetailsBinding((ConstraintLayout) rootView, bottomBar, btnBack,
          btnSend, etInputAnswer, llContainer, nestedScrollView, rvFeedbackAnswer, toolbar,
          tvAnswers, tvFeedback, tvPostTime, tvUserName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
