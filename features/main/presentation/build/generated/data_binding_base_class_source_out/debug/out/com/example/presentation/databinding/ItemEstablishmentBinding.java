// Generated by view binder compiler. Do not edit!
package com.example.presentation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.presentation.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemEstablishmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ShapeableImageView ivRestImage;

  @NonNull
  public final ImageView ivTime;

  @NonNull
  public final View line1;

  @NonNull
  public final TextView tvHappyTime;

  @NonNull
  public final TextView tvName;

  private ItemEstablishmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull ShapeableImageView ivRestImage, @NonNull ImageView ivTime, @NonNull View line1,
      @NonNull TextView tvHappyTime, @NonNull TextView tvName) {
    this.rootView = rootView;
    this.ivRestImage = ivRestImage;
    this.ivTime = ivTime;
    this.line1 = line1;
    this.tvHappyTime = tvHappyTime;
    this.tvName = tvName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemEstablishmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemEstablishmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_establishment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemEstablishmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_rest_image;
      ShapeableImageView ivRestImage = ViewBindings.findChildViewById(rootView, id);
      if (ivRestImage == null) {
        break missingId;
      }

      id = R.id.iv_time;
      ImageView ivTime = ViewBindings.findChildViewById(rootView, id);
      if (ivTime == null) {
        break missingId;
      }

      id = R.id.line1;
      View line1 = ViewBindings.findChildViewById(rootView, id);
      if (line1 == null) {
        break missingId;
      }

      id = R.id.tv_happy_time;
      TextView tvHappyTime = ViewBindings.findChildViewById(rootView, id);
      if (tvHappyTime == null) {
        break missingId;
      }

      id = R.id.tv_name;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      return new ItemEstablishmentBinding((ConstraintLayout) rootView, ivRestImage, ivTime, line1,
          tvHappyTime, tvName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
