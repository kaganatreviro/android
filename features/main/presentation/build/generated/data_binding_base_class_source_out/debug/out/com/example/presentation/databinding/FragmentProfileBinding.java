// Generated by view binder compiler. Do not edit!
package com.example.presentation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.presentation.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnEditProfile;

  @NonNull
  public final Button btnLogout;

  @NonNull
  public final CardView containerSubscription;

  @NonNull
  public final CardView containerSubscriptionEmpty;

  @NonNull
  public final ShapeableImageView ivUserAvatar;

  @NonNull
  public final LinearLayout llProfile;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvNoSubsTitleEmpty;

  @NonNull
  public final TextView tvSubsDeadline;

  @NonNull
  public final TextView tvSubsDuration;

  @NonNull
  public final TextView tvSubsName;

  @NonNull
  public final MaterialTextView tvSubsTitle;

  @NonNull
  public final MaterialTextView tvUserEmail;

  @NonNull
  public final MaterialTextView tvUserName;

  private FragmentProfileBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnEditProfile, @NonNull Button btnLogout,
      @NonNull CardView containerSubscription, @NonNull CardView containerSubscriptionEmpty,
      @NonNull ShapeableImageView ivUserAvatar, @NonNull LinearLayout llProfile,
      @NonNull Toolbar toolbar, @NonNull TextView tvNoSubsTitleEmpty,
      @NonNull TextView tvSubsDeadline, @NonNull TextView tvSubsDuration,
      @NonNull TextView tvSubsName, @NonNull MaterialTextView tvSubsTitle,
      @NonNull MaterialTextView tvUserEmail, @NonNull MaterialTextView tvUserName) {
    this.rootView = rootView;
    this.btnEditProfile = btnEditProfile;
    this.btnLogout = btnLogout;
    this.containerSubscription = containerSubscription;
    this.containerSubscriptionEmpty = containerSubscriptionEmpty;
    this.ivUserAvatar = ivUserAvatar;
    this.llProfile = llProfile;
    this.toolbar = toolbar;
    this.tvNoSubsTitleEmpty = tvNoSubsTitleEmpty;
    this.tvSubsDeadline = tvSubsDeadline;
    this.tvSubsDuration = tvSubsDuration;
    this.tvSubsName = tvSubsName;
    this.tvSubsTitle = tvSubsTitle;
    this.tvUserEmail = tvUserEmail;
    this.tvUserName = tvUserName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_edit_profile;
      MaterialButton btnEditProfile = ViewBindings.findChildViewById(rootView, id);
      if (btnEditProfile == null) {
        break missingId;
      }

      id = R.id.btn_logout;
      Button btnLogout = ViewBindings.findChildViewById(rootView, id);
      if (btnLogout == null) {
        break missingId;
      }

      id = R.id.container_subscription;
      CardView containerSubscription = ViewBindings.findChildViewById(rootView, id);
      if (containerSubscription == null) {
        break missingId;
      }

      id = R.id.container_subscription_empty;
      CardView containerSubscriptionEmpty = ViewBindings.findChildViewById(rootView, id);
      if (containerSubscriptionEmpty == null) {
        break missingId;
      }

      id = R.id.iv_user_avatar;
      ShapeableImageView ivUserAvatar = ViewBindings.findChildViewById(rootView, id);
      if (ivUserAvatar == null) {
        break missingId;
      }

      id = R.id.ll_profile;
      LinearLayout llProfile = ViewBindings.findChildViewById(rootView, id);
      if (llProfile == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tv_no_subs_title_empty;
      TextView tvNoSubsTitleEmpty = ViewBindings.findChildViewById(rootView, id);
      if (tvNoSubsTitleEmpty == null) {
        break missingId;
      }

      id = R.id.tv_subs_deadline;
      TextView tvSubsDeadline = ViewBindings.findChildViewById(rootView, id);
      if (tvSubsDeadline == null) {
        break missingId;
      }

      id = R.id.tv_subs_duration;
      TextView tvSubsDuration = ViewBindings.findChildViewById(rootView, id);
      if (tvSubsDuration == null) {
        break missingId;
      }

      id = R.id.tv_subs_name;
      TextView tvSubsName = ViewBindings.findChildViewById(rootView, id);
      if (tvSubsName == null) {
        break missingId;
      }

      id = R.id.tv_subs_title;
      MaterialTextView tvSubsTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvSubsTitle == null) {
        break missingId;
      }

      id = R.id.tv_user_email;
      MaterialTextView tvUserEmail = ViewBindings.findChildViewById(rootView, id);
      if (tvUserEmail == null) {
        break missingId;
      }

      id = R.id.tv_user_name;
      MaterialTextView tvUserName = ViewBindings.findChildViewById(rootView, id);
      if (tvUserName == null) {
        break missingId;
      }

      return new FragmentProfileBinding((ConstraintLayout) rootView, btnEditProfile, btnLogout,
          containerSubscription, containerSubscriptionEmpty, ivUserAvatar, llProfile, toolbar,
          tvNoSubsTitleEmpty, tvSubsDeadline, tvSubsDuration, tvSubsName, tvSubsTitle, tvUserEmail,
          tvUserName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
